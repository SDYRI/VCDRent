@{
    var Title = "";
    var icon = "";

    Title = "Member";
    icon = "fa-h-square";


    ViewData["Title"] = Title;
    Layout = "_AdminlteNetcore";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">

    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title text-primary"><i class="fa @icon"></i> @ViewData["Title"] </h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div id="Grid"></div>
            </div>
            <!-- /.box-body -->
            <div class="box-footer">

            </div>
            <!-- /.box-footer-->
        </div>
        <!-- /.box -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->

<!-- Template -->
<script id="template" type="text/template">
    <table cellspacing="100">
        <tr style="display: none;">
            <td>ID Member</td>
            <td>
                {{if memberID}}
                <input id="memberID" name="memberID" disabled="disabled" value="{{:memberID}}" />
                {{else}}
                <input id="" name="" disabled="disabled" value="{AutoGenerate Id}" />
                {{/if}}
            </td>
        </tr>
        <tr>
            <td>Registration Date Member</td>
            <td>
                <input id="registraiondateMember" name="registraiondateMember" value="{{:registraiondateMember}}" class="e-field e-ejinputtext" edit-type="Datepicker" />
            </td>
        </tr>
        <tr>
            <td>Full Name Member</td>
            <td colspan="4">
                <input id="fullnameMember" name="fullnameMember" value="{{:fullnameMember}}" style="width=120px" />
            </td>
        </tr>
        <tr>
            <td>Age Member</td>
            <td>
                <input id="ageMember" name="ageMember" value="{{:ageMember}}" />
            </td>
        </tr>
        <tr>
            <td>Phone Number Member</td>
            <td>
                <input id="phonenumberMember" name="phonenumberMember" value="{{:phonenumberMember}}" />
            </td>
        </tr>
        <tr>
            <td>Address Member</td>
            <td>
                <input id="addressMember" name="addressMember" value="{{:addressMember}}" />
            </td>
        </tr>
        <tr>
            <td>Another Rental</td>
            <td>
                {{if anotherRentalMember}}
                <input type="checkbox" id="anotherRentalMember" name="anotherRentalMember" checked="checked" class="e-field e-checkbox" style="width:30px" />
                {{else}}
                <input type="checkbox" id="anotherRentalMember" name="anotherRentalMember" class="e-field e-checkbox" style="width:30px" />
                {{/if}}
            </td>
        </tr>
        <tr>
            <td>Knowthis Rental</td>
            <td>
                <input id="knowthisID" name="knowthisID" value="{{:knowthisID}}" />
            </td>
        </tr>
        <tr>
            <td>Package Rental</td>
            <td>
                <input id="packageID" name="packageID" value="{{:packageID}}" />
            </td>
        </tr>
    </table>
</script>
<!-- /.Template -->

@section Styles{

}

@section Scripts{

    <script type="text/javascript">

        var dataManagerKnowthis = ej.DataManager({
            url: "/api/KnowThis",
            adaptor: new ej.WebApiAdaptor(),
            offline: true
        });

        var dataManagerPackage = ej.DataManager({
            url: "/api/Package",
            adaptor: new ej.WebApiAdaptor(),
            offline: true
        });

        $(function () {

            var dataManager = ej.DataManager({
                url: "/api/Member",
                adaptor: new ej.WebApiAdaptor(),
                offline: true
            });

            dataManager.ready.done(function (e) {
                $("#Grid").ejGrid({
                    dataSource: ej.DataManager({
                        json: e.result,
                        adaptor: new ej.remoteSaveAdaptor(),
                        insertUrl: "/api/Member/Insert",
                        updateUrl: "/api/Member/Edit",
                        removeUrl: "/api/Member/Remove",
                    }),
                    create: "createNameToolbar",
                    toolbarSettings:
                        {
                            showToolbar: true,
                            toolbarItems: ["add", "edit", "delete", "update", "cancel", "search", "printGrid"]
                        },

                    editSettings: {
                        allowAdding: true,
                        allowEditing: true,
                        allowDeleting: true,
                        showDeleteConfirmDialog: true,
                        editMode: "dialogtemplate",
                        dialogEditorTemplateID: "#template",
                        titleColumn: "fullnameMember",
                    },
                    isResponsive: true,
                    enableResponsiveRow: true,
                    allowSorting: true,
                    allowSearching: true,
                    allowFiltering: true,
                    filterSettings: {
                        filterType: "excel",
                        maxFilterChoices: 100,
                        enableCaseSensitivity: false
                    },
                    allowPaging: true,
                    pageSettings: { pageSize: 10, printMode: ej.Grid.PrintMode.CurrentPage },
                    columns: [
                        { field: "memberID", headerText: 'Id', isPrimaryKey: true, isIdentity: true, visible: false },
                        { field: "registraiondateMember", headerText: 'Registration Date', editType: "datepicker", format: "{0:MMMM/dd/yyyy}", validationRules: { required: true }, allowEditing: true },
                        { field: "fullnameMember", headerText: 'Full Name Member', validationRules: { required: true }, allowEditing: true },
                        { field: "ageMember", headerText: 'Age Member', headerTextAlign: "left", textAlign: "right", format: "{0:N0}", editType: "numericedit", validationRules: { required: false }, allowEditing: true },
                        { field: "phonenumberMember", headerText: 'Phone Number Member', validationRules: { required: false }, allowEditing: true },
                        { field: "addressMember", headerText: 'Address Member', validationRules: { required: true }, allowEditing: true },
                        { field: "anotherRentalMember", headerText: 'Another Rental', type: "boolean", editType: "booleanedit", defaultValue: false, validationRules: { required: false }, allowEditing: true },
                        { field: "knowthisID", headerText: 'Knowthis Rental', foreignKeyField: "knowthisID", foreignKeyValue: "informationKnowthis", dataSource: dataManagerKnowthis, validationRules: { required: true }, allowEditing: true },
                        { field: "packageID", headerText: 'Package Rental', foreignKeyField: "packageID", foreignKeyValue: "namePackage", dataSource: dataManagerPackage, validationRules: { required: true }, allowEditing: true },
                        { field: "statusMember", headerText: 'Member Active', type: "boolean", editType: "booleanedit", defaultValue: false, validationRules: { required: false }, allowEditing: false },
                    ],
                    actionComplete: "complete",
                    actionBegin: "begin",
                });
            });

        });

        function complete(args) {
            $("#fullnameMember").ejMaskEdit({
                inputMode: 'Text',
            });

            $("#ageMember").ejMaskEdit({
                inputMode: 'Text',
                maskFormat: "999",
            });

            $("#phonenumberMember").ejMaskEdit({
                inputMode: 'Text',
                maskFormat: "999999999999",
            });

            $("#addressMember").ejMaskEdit({
                inputMode: 'Text',
            });

            $("#anotherRentalMember").ejCheckBox();

            $('#knowthisID').ejDropDownList({
                "dataSource": dataManagerKnowthis,
                "fields": { text: "informationKnowthis", value: 'knowthisID' },
                "itemsCount": 10,
                "allowVirtualScrolling": true
            });

            $('#packageID').ejDropDownList({
                "dataSource": dataManagerPackage,
                "fields": { text: "namePackage", value: 'packageID' },
                "itemsCount": 10,
                "allowVirtualScrolling": true
            });

            if (args.requestType == "beginedit" || args.requestType == "add") {
                $("#registraiondateMember").ejDatePicker({ width: "100%", value: args.rowData.registraiondateMember, dateFormat: "MMMM/dd/yyyy" });
            }

        }

    </script>
}
